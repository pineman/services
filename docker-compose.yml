x-common: &common
  restart: unless-stopped
  init: true
  logging:
    driver: journald
    options:
      tag: "{{.Name}}@{{.ImageID}}"

services:
  ingress:
    <<: *common
    image: docker.io/traefik:2.5.2
    container_name: ingress
    ports:
    - "80:80"
    - "443:443"
    - "8080:8080"
    command:
    - "--api.insecure=true"
    - "--providers.docker=true"
    - "--accesslog=true"
    - "--entrypoints.http.address=:80"
    - "--entrypoints.https.address=:443"
    - "--entrypoints.http.http.redirections.entrypoint.to=https"
    - "--entrypoints.http.http.redirections.entrypoint.scheme=https"
    - "--certificatesresolvers.pineman.acme.httpchallenge=true"
    - "--certificatesresolvers.pineman.acme.httpchallenge.entrypoint=http"
    - "--certificatesresolvers.pineman.acme.email=joao.castropinheiro@gmail.com"
    - "--certificatesresolvers.pineman.acme.storage=/acme/acme.json"
    volumes:
    - "/var/run/docker.sock:/var/run/docker.sock:ro"
    - /home/pineman/services/ingress/acme:/acme

  homepage:
    <<: *common
    image: registry.gitlab.com/pineman/services/homepage:1.0.3
    container_name: homepage
    ports:
    - "8081:80"
    labels:
    - "traefik.http.routers.homepage.rule=Host(`www.pineman.eu`) || Host(`pineman.eu`)"
    - "traefik.http.routers.homepage.entrypoints=https"
    - "traefik.http.routers.homepage.tls=true"
    - "traefik.http.routers.homepage.tls.certresolver=pineman"

  abra:
    <<: *common
    image: registry.gitlab.com/pineman/services/abra:1.0.0-1
    container_name: abra
    ports:
    - "2272:2272"
    labels:
    - "traefik.http.routers.abra.rule=Host(`abra.pineman.eu`)"
    - "traefik.http.routers.abra.entrypoints=https"
    - "traefik.http.routers.abra.tls=true"
    - "traefik.http.routers.abra.tls.certresolver=pineman"

  public: &public
    <<: *common
    build:
      context: public
      cache_from: ["registry.gitlab.com/pineman/services/public:latest"]
      args: ["BUILDKIT_INLINE_CACHE=1"]
    image: registry.gitlab.com/pineman/services/public:1.1.6
    container_name: public
    ports:
    - "8035:8035"
    volumes:
    - /home/pineman/Documents/Photos:/public
    labels:
    - "traefik.http.routers.public.rule=Host(`public.pineman.eu`)"
    - "traefik.http.routers.public.entrypoints=https"
    - "traefik.http.routers.public.tls=true"
    - "traefik.http.routers.public.tls.certresolver=pineman"
  public-latest:
    <<: *public
    image: registry.gitlab.com/pineman/services/public:latest
    profiles: ["push"]

  paper: &paper
    <<: *common
    build:
      context: paper
      cache_from: ["registry.gitlab.com/pineman/services/paper:latest"]
      args: ["BUILDKIT_INLINE_CACHE=1"]
    image: registry.gitlab.com/pineman/services/paper:1.18-4
    container_name: paper
    ports:
    - "25565:25565"
    volumes:
    - /home/pineman/paper:/paper
  paper-latest:
    <<: *paper
    image: registry.gitlab.com/pineman/services/paper:latest
    profiles: ["push"]

  #spotifyd: &spotifyd
  #  <<: *common
  #  build:
  #    context: spotifyd
  #    cache_from: ["registry.gitlab.com/pineman/services/spotifyd:latest"]
  #    args: ["BUILDKIT_INLINE_CACHE=1"]
  #  image: registry.gitlab.com/pineman/services/spotifyd:0.3.2-7
  #  container_name: spotifyd
  #  devices:
  #  - "/dev/snd:/dev/snd"
  #  command: -u 'joao.castropinheiro@gmail.com' -P 'cat /spotifyd/spotifyd_pwd.txt'
  #spotifyd-latest:
  #  <<: *spotifyd
  #  image: registry.gitlab.com/pineman/services/spotifyd:latest
  #  profiles: ["push"]

  transmission:
    <<: *common
    image: ghcr.io/linuxserver/transmission:version-3.00-r2
    container_name: transmission
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Lisbon
    ports:
      - "9091:9091"
      - "51413:51413"
      - "51413:51413/udp"
    volumes:
      - transmission-config:/config
      - /home/pineman/Downloads:/downloads

  # TODO: node_exporter
  # TODO: configs
  prometheus:
    <<: *common
    image: docker.io/prom/prometheus:v2.28.1
    container_name: prometheus
    ports:
    - "9090:9090"

  grafana:
    <<: *common
    image: docker.io/grafana/grafana:8.0.4-ubuntu
    container_name: grafana
    ports:
    - "3000:3000"

volumes:
  transmission-config:
    name: transmission-config
